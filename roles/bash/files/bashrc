#!/usr/bin/env bash
# .bashrc

umask 022

EDITOR="$(command -v vim || command -v vi)" && export EDITOR
export HISTCONTROL=ignoreboth
export HISTFILESIZE=10000
export HISTSIZE=10000
export SDKMAN_DIR="${HOME}/.sdkman"
export SPEC_OPTS="--format documentation"
export SSLKEYLOGFILE="${HOME}/.sslkeylogfile"
export SVN_EDITOR=/usr/bin/vim
export VAGRANT_DEFAULT_PROVIDER='docker'
export brofist="👊"
export shrug="¯\\_(ツ)_/¯"
export thumbsup="👍"
export ANSIBLE_NOCOWS=1
export ANSIBLE_VAULT_PASSWORD_FILE="${HOME}/secrets/ansible-vault-password-file"
export DEFAULT_VAULT_PASSWORD_FILE="${ANSIBLE_VAULT_PASSWORD_FILE}"

if command -v vimpager &>/dev/null; then
    if [[ -f ${HOME}/.vimpagerrc ]]; then
        export PAGER="vimpager -u ${HOME}/.vimpagerrc"
    else
        export PAGER="vimpager"
    fi
fi

shopt -s checkwinsize
shopt -s histappend

source "${HOME}/.bash_functions.sh"

do_set_aliases

pathmunge /opt/JetBrains/bin after
pathmunge /opt/HashiCorp after
pathmunge "${HOME}/.local/bin" after
pathmunge "${HOME}/bin" after
if [[ -d /Applications/Postgres.app/Contents/Versions/latest/bin ]]; then
    pathmunge /Applications/Postgres.app/Contents/Versions/latest/bin after
fi
pathmunge /usr/local/pks/bin

xrdb -merge ~/.Xresources 2>/dev/null || true

for i in \
    "${HOME}/.credentials.sh" \
    "${HOME}/.sdkman/bin/sdkman-init.sh" \

do
    [[ -s "${i}" ]] && source "${i}"
done

if is_interactive; then
    do_set_dir_colors
    do_set_less_termcaps
    do_set_sparks
    do_set_tputs
    complete -C /usr/local/bin/aws_completer aws

    for i in \
        "${HOME}/.bash_prompt.sh" \
        "${HOME}/.iterm2_shell_integration.bash" \
        "${HOME}/.kube/kubectl-completion.sh" \
        "/opt/google/google-cloud-sdk/completion.bash.inc" \
        "/usr/local/etc/bash_completion" \
        "${python_virtualenv_dir}/bin/activate" \

    do
        [[ -s "${i}" ]] && source "${i}"
    done  # end for i in interactive source files

    source "${HOME}/.bash_aws_profile.sh"

fi  # end if is_interactive

export BASHRC=true

if is_macos; then
    sudo defaults write .GlobalPreferences com.apple.mouse.scaling -1
    sudo defaults write -g CGFontRenderingFontSmoothingDisabled -bool NO
fi


